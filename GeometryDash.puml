@startuml
enum sk.stuba.fiit.martinszabo.geometrydash.components.ButtonType {
+  PLAY
+  EDITOR
+  QUIT
}
class sk.stuba.fiit.martinszabo.geometrydash.file.Parser {
- {static} int offset
- {static} int line
- {static} byte[] bytes
- <<Create>> Parser()
+ {static} byte[] getBytes()
+ {static} void openFile(String)
+ {static} byte[] readAllBytes(InputStream)
+ {static} void skipWhitespace()
+ {static} char peek()
+ {static} char advance()
+ {static} void consume(char)
+ {static} boolean atEnd()
+ {static} int parseInt()
+ {static} double parseDouble()
+ {static} float parseFloat()
+ {static} String parseString()
+ {static} boolean parseBoolean()
+ {static} Component<?> parseComponent()
+ {static} GameObject parseGameObject()
- {static} boolean isDigit(char)
+ {static} void consumeBeginObjectProperty(String)
+ {static} void consumeEndObjectProperty()
+ {static} String consumeStringProperty(String)
+ {static} int consumeIntProperty(String)
+ {static} double consumeDoubleProperty(String)
+ {static} float consumeFloatProperty(String)
+ {static} boolean consumeBooleanProperty(String)
- {static} void consumeProperty(String)
- {static} void checkString(String)
- {static} void consumeBoolean(boolean)
}
class sk.stuba.fiit.martinszabo.geometrydash.util.Constants {
+ {static} int SCREEN_WIDTH
+ {static} int SCREEN_HEIGHT
+ {static} String SCREEN_TITLE
+ {static} int PLAYER_HEIGHT
+ {static} int PLAYER_WIDTH
+ {static} double JUMP_FORCE
+ {static} double PLAYER_SPEED
+ {static} int GROUND_Y
+ {static} int CAMERA_OFFSET_X
+ {static} int CAMERA_OFFSET_Y
+ {static} int CAMERA_OFFSET_GROUND_Y
+ {static} double GRAVITY
+ {static} double TERMINAL_VELOCITY
+ {static} int TILE_HEIGHT
+ {static} int TILE_WIDTH
+ {static} int BUTTON_OFFSET_X
+ {static} int BUTTON_OFFSET_Y
+ {static} int BUTTON_SPACING_HZ
+ {static} int BUTTON_SPACING_VT
+ {static} int BUTTON_HEIGHT
+ {static} int BUTTON_WIDTH
+ {static} Color BG_COLOR
+ {static} Color GROUND_COLOR
+ {static} int CONTAINER_OFFSET_Y
+ {static} int TAB_WIDTH
+ {static} int TAB_HEIGHT
+ {static} int TAB_OFFSET_X
+ {static} int TAB_OFFSET_Y
+ {static} int TAB_HORIZONTAL_SPACING
+ {static} Stroke LINE
+ {static} Stroke THICK_LINE
+ {static} double TIME_GAME_STARTED
+ {static} double TIME_CONVERSION_MONTHS
+ {static} int GRID_X_LINES
+ {static} int GRID_Y_LINES
+ {static} double DEBOUNCE_TIME_MOUSE
+ {static} double DEBOUNCE_TIME_KEY
- <<Create>> Constants()
}
class sk.stuba.fiit.martinszabo.geometrydash.components.Grid {
~ Camera camera
- int width
- int height
+ <<Create>> Grid()
+ void update(double)
+ void draw(Graphics2D)
+ Component<Grid> copy()
+ int getWidth()
+ void setWidth(int)
+ int getHeight()
+ void setHeight(int)
+ String serialize(int)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.util.Time {
- {static} double timeLevelStarted
- <<Create>> Time()
+ {static} double getTime()
+ {static} void resetTimeStarted()
}
class sk.stuba.fiit.martinszabo.geometrydash.engine.Window {
- MouseListener mouseListener
- KeyListener keyListener
- boolean isInEditor
- {static} Window window
- boolean isRunning
- Scene currentScene
- Image doubleBufferImage
- Graphics doubleBufferGraphics
- <<Create>> Window()
+ {static} Camera getCamera()
+ void init()
+ Scene getCurrentScene()
+ void changeScene(int)
+ {static} Window getWindow()
+ void update(double)
+ void draw(Graphics)
+ void renderOffscreen(Graphics)
+ void run()
+ {static} boolean removeTempFile(String)
+ {static} MouseListener getMouseListener()
+ {static} KeyListener getKeyListener()
+ {static} boolean isInEditor()
+ {static} Scene getScene()
+ boolean equals(Object)
+ int hashCode()
}
enum sk.stuba.fiit.martinszabo.geometrydash.components.PlayerState {
+  NORMAL
+  FLYING
}
class sk.stuba.fiit.martinszabo.geometrydash.ui.TabItem {
- int x
- int y
- int width
- int height
- Sprite sprite
- boolean isSelected
- int bufferX
- int bufferY
- MainContainer parent
+ <<Create>> TabItem(int,int,int,int,Sprite,MainContainer)
+ void update(double)
+ void draw(Graphics2D)
+ Component<TabItem> copy()
+ String serialize(int)
+ int getX()
+ int getY()
+ int getWidth()
+ int getHeight()
+ Sprite getSprite()
+ boolean isSelected()
+ void setSelected(boolean)
+ int getBufferX()
+ void setBufferX(int)
+ int getBufferY()
+ void setBufferY(int)
+ MainContainer getParent()
+ void setParent(MainContainer)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.components.TriangleBounds {
- double enclosingRadius
- double base
- double height
- double halfWidth
- double halfHeight
- Vector2D point1
- Vector2D point2
- Vector2D point3
- int INSIDE
- int LEFT
- int RIGHT
- int BOTTOM
- int TOP
+ <<Create>> TriangleBounds(double,double)
+ void start()
+ {static} boolean checkCollision(BoxBounds,TriangleBounds)
- boolean broadPhase(BoxBounds)
- boolean narrowPhase(BoxBounds)
- boolean boxIntersection(Vector2D,Vector2D,int,BoxBounds,Vector2D)
- int regionCode(Vector2D,BoxBounds)
- Vector2D rotatePoint(double,Vector2D,Vector2D)
+ void calculateTransformation()
+ double getWidth()
+ double getHeight()
+ void draw(Graphics2D)
- Vector2D transformToWorld(Vector2D)
+ Component<Bounds> copy()
+ String serialize(int)
+ {static} TriangleBounds deserialize()
+ double dot(Vector2D,Vector2D)
+ boolean raycast(Vector2D)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.engine.MouseListener {
- boolean mousePressed
- boolean mouseDragged
- float x
- float y
- float dx
- float dy
- int mouseButton
+ void mousePressed(MouseEvent)
+ void mouseReleased(MouseEvent)
+ void mouseMoved(MouseEvent)
+ void mouseDragged(MouseEvent)
+ boolean isMousePressed()
+ void setMousePressed(boolean)
+ boolean isMouseDragged()
+ void setMouseDragged(boolean)
+ float getX()
+ void setX(float)
+ float getY()
+ void setY(float)
+ float getDx()
+ void setDx(float)
+ float getDy()
+ void setDy(float)
+ int getMouseButton()
+ void setMouseButton(int)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.engine.LevelScene {
- GameObject player
- BoxBounds playerBounds
- boolean isPaused
- double debounceKeyLeft
- double levelSpeed
+ <<Create>> LevelScene(String)
+ void init()
+ void initAssetPool()
+ void update(double)
+ void draw(Graphics2D)
+ void restartLevel()
+ GameObject getPlayer()
+ void setPlayer(GameObject)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.util.AssetPool {
- {static} Map<String,Sprite> sprites
- {static} Map<String,Spritesheet> spritesheets
- <<Create>> AssetPool()
+ {static} boolean hasSprite(String)
+ {static} boolean hasSpritesheet(String)
+ {static} Sprite getSprite(String)
+ {static} Spritesheet getSpritesheet(String)
+ {static} void addSprite(String,Sprite)
+ {static} void addSpritesheet(String,int,int,int,int,int)
}
class sk.stuba.fiit.martinszabo.geometrydash.components.BoxBounds {
- double width
- double height
- double halfWidth
- double halfHeight
- double enclosingRadius
- Vector2D center
- boolean isTrigger
- double xBuffer
- double yBuffer
+ <<Create>> BoxBounds(double,double)
+ <<Create>> BoxBounds(double,double,boolean)
+ <<Create>> BoxBounds(double,double,double,double,boolean)
- void init(double,double,double,double,boolean)
+ void start()
+ void calculateCenter()
+ {static} boolean checkCollision(BoxBounds,BoxBounds)
+ void resolveCollision(GameObject)
+ String serialize(int)
+ {static} BoxBounds deserialize()
+ void update(double)
+ BoxBounds copy()
+ double getWidth()
+ void setWidth(double)
+ double getHeight()
+ void setHeight(double)
+ double getHalfWidth()
+ double getHalfHeight()
+ double getEnclosingRadius()
+ boolean raycast(Vector2D)
+ void draw(Graphics2D)
+ void setYBuffer(double)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.ui.MenuItem {
- int x
- int y
- int width
- int height
- Sprite buttonSprite
- Sprite hoverSprite
- Sprite imageAttached
- boolean isSelected
- int bufferX
- int bufferY
- MainContainer parent
+ <<Create>> MenuItem(int,int,int,int,Sprite,Sprite,MainContainer)
+ void start()
+ void update(double)
+ MenuItem copy()
+ void draw(Graphics2D)
+ String serialize(int)
+ int getX()
+ int getY()
+ int getWidth()
+ int getHeight()
+ Sprite getButtonSprite()
+ Sprite getHoverSprite()
+ Sprite getImageAttached()
+ void setImageAttached(Sprite)
+ boolean isSelected()
+ void setSelected(boolean)
+ int getBufferX()
+ void setBufferX(int)
+ int getBufferY()
+ void setBufferY(int)
+ MainContainer getParent()
+ void setParent(MainContainer)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.engine.MenuScene {
- double debounceLeft
- GameObject cursor
- GameObject logo
- GameObject playButton
- GameObject editorButton
- GameObject quitButton
+ <<Create>> MenuScene(String)
+ void init()
- GameObject initializeButton(String,double,double,Sprite,ButtonType)
+ void update(double)
+ void draw(Graphics2D)
+ boolean equals(Object)
+ int hashCode()
}
abstract class sk.stuba.fiit.martinszabo.geometrydash.engine.Component {
- GameObject gameObject
+ void update(double)
+ void draw(Graphics2D)
+ {abstract}Component<T> copy()
+ void start()
+ GameObject getGameObject()
+ void setGameObject(GameObject)
+ boolean equals(Object)
+ int hashCode()
}
abstract class sk.stuba.fiit.martinszabo.geometrydash.engine.Scene {
- String name
- Camera camera
- ArrayList<GameObject> gameObjects
- ArrayList<GameObject> gameObjectsToRemove
- Renderer renderer
- GameObject ground
# <<Create>> Scene(String)
+ void addGameObject(GameObject)
+ {abstract}void init()
+ {abstract}void update(double)
+ {abstract}void draw(Graphics2D)
+ void initAssetPool()
# void importLevel(String)
# void initBackgrounds(int,boolean)
+ String getName()
+ void setName(String)
+ Camera getCamera()
+ void setCamera(Camera)
+ ArrayList<GameObject> getGameObjects()
+ void setGameObjects(ArrayList<GameObject>)
+ Renderer getRenderer()
+ void setRenderer(Renderer)
+ GameObject getGround()
+ void removeGameObject(GameObject)
+ ArrayList<GameObject> getGameObjectsToRemove()
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.components.CameraControls {
- double prevMx
- double prevMy
+ <<Create>> CameraControls()
+ void update(double)
+ CameraControls copy()
+ String serialize(int)
+ boolean equals(Object)
+ int hashCode()
}
enum sk.stuba.fiit.martinszabo.geometrydash.components.Direction {
+  UP
+  DOWN
+  LEFT
+  RIGHT
}
class sk.stuba.fiit.martinszabo.geometrydash.components.LevelEditorControls {
- double debounceLeft
- double debounceKeyLeft
- boolean shiftKeyPressed
- ArrayList<GameObject> selectedObjects
- int width
- int height
- double worldX
- double worldY
- boolean isEditing
- boolean wasDragged
- double dragX
- double dragY
- double dragWidth
- double dragHeight
+ <<Create>> LevelEditorControls(int,int)
+ void updateSpritePosition()
+ void copyGameObjectToScene()
+ void addToSelected(Vector2D)
+ ArrayList<GameObject> boxCast(double,double,double,double)
+ void clearSelected(Vector2D,boolean)
+ void escape()
+ void update(double)
- void checkMouse()
- void checkMovement()
- void checkRotation()
- void checkDuplication()
- void checkRemoval()
- void move(Direction)
- void rotate(double)
- void duplicate()
+ void draw(Graphics2D)
+ Component<LevelEditorControls> copy()
+ int getWidth()
+ void setWidth(int)
+ int getHeight()
+ void setHeight(int)
+ String serialize(int)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.components.Spritesheet {
- List<Sprite> sprites
- int tileWidth
- int tileHeight
- int spacing
+ <<Create>> Spritesheet(String,int,int,int,int,int)
+ List<Sprite> getSprites()
+ void setSprites(List<Sprite>)
+ int getTileWidth()
+ void setTileWidth(int)
+ int getTileHeight()
+ void setTileHeight(int)
+ int getSpacing()
+ void setSpacing(int)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.engine.Renderer {
- Map<Integer,List<GameObject>> gameObjects
- Camera camera
+ <<Create>> Renderer(Camera)
+ void submit(GameObject)
+ void render(Graphics2D)
+ Map<Integer,List<GameObject>> getGameObjects()
+ void setGameObjects(Map<Integer,List<GameObject>>)
+ Camera getCamera()
+ void setCamera(Camera)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.components.Portal {
- PlayerState stateChanger
- GameObject player
- BoxBounds bounds
+ <<Create>> Portal(PlayerState)
+ <<Create>> Portal(PlayerState,GameObject)
+ void start()
+ void update(double)
+ Component<Portal> copy()
+ String serialize(int)
+ {static} Portal deserialize()
+ PlayerState getStateChanger()
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.util.Transform {
- Vector2D position
- double rotation
- Vector2D scale
+ <<Create>> Transform(Vector2D)
+ <<Create>> Transform(Vector2D,double,Vector2D)
+ Transform copy()
+ String toString()
+ Vector2D getPosition()
+ void setPosition(Vector2D)
+ double getRotation()
+ void setRotation(double)
+ Vector2D getScale()
+ void setScale(Vector2D)
+ String serialize(int)
+ {static} Transform deserialize()
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.engine.GameObject {
- List<Component<?>> components
- String name
- Transform transform
- boolean serializable
- boolean ui
- int zIndex
+ <<Create>> GameObject(String,Transform,int)
+ <<Create>> GameObject(String,Transform,int,boolean,boolean)
+ <<Create>> GameObject(String,Transform,int,boolean)
+ T getComponent(Class<T>)
+ T removeComponent(Class<T>)
+ List<Component<?>> getComponents()
+ void addComponent(Component<?>)
+ GameObject copy()
+ void update(double)
+ void draw(Graphics2D)
+ void draw(Graphics2D,Class<?>)
+ String serialize(int)
+ {static} GameObject deserialize()
+ Transform getTransform()
+ boolean isUi()
+ void setTransform(Transform)
+ void setSerializable(boolean)
+ void setUi(boolean)
+ double getX()
+ double getY()
+ void setX(double)
+ void setY(double)
+ int getzIndex()
+ boolean isSerializable()
+ boolean equals(Object)
+ int hashCode()
}
enum sk.stuba.fiit.martinszabo.geometrydash.components.BoundsType {
+  BOX
+  TRIANGLE
}
class sk.stuba.fiit.martinszabo.geometrydash.util.Vector2D {
- double x
- double y
+ <<Create>> Vector2D(double,double)
+ <<Create>> Vector2D()
+ Vector2D copy()
+ double getX()
+ void setX(double)
+ double getY()
+ void setY(double)
+ String serialize(int)
+ {static} Vector2D deserialize()
+ boolean equals(Object)
+ int hashCode()
}
interface sk.stuba.fiit.martinszabo.geometrydash.file.Serialize {
~ String serialize(int)
~ String addStringProperty(String,String,int,boolean,boolean)
~ String addIntProperty(String,int,int,boolean,boolean)
~ String addFloatProperty(String,float,int,boolean,boolean)
~ String addDoubleProperty(String,double,int,boolean,boolean)
~ String addBooleanProperty(String,boolean,int,boolean,boolean)
~ String beginObjectProperty(String,int)
~ String endObjectProperty(int)
~ String addTabs(int)
~ String addEnding(boolean,boolean)
}
class sk.stuba.fiit.martinszabo.geometrydash.components.RigidBody {
- Vector2D velocity
+ <<Create>> RigidBody(Vector2D)
+ void update(double)
+ Component<RigidBody> copy()
+ Vector2D getVelocity()
+ void setVelocity(Vector2D)
+ String serialize(int)
+ boolean equals(Object)
+ int hashCode()
}
abstract class sk.stuba.fiit.martinszabo.geometrydash.components.Bounds {
- BoundsType type
- boolean selected
+ {abstract}double getWidth()
+ {abstract}double getHeight()
+ {abstract}boolean raycast(Vector2D)
+ {static} boolean checkCollision(Bounds,Bounds)
+ {static} void resolveCollision(Bounds,GameObject)
+ BoundsType getType()
+ void setType(BoundsType)
+ boolean isSelected()
+ void setSelected(boolean)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.components.Ground {
+ void update(double)
+ void draw(Graphics2D)
+ Component<Ground> copy()
+ String serialize(int)
}
class sk.stuba.fiit.martinszabo.geometrydash.engine.KeyListener {
- boolean[] keyPressed
+ void keyPressed(KeyEvent)
+ void keyReleased(KeyEvent)
+ boolean isKeyPressed(int)
+ boolean equals(Object)
+ int hashCode()
}
abstract class sk.stuba.fiit.martinszabo.geometrydash.file.Serialization {
+ String addStringProperty(String,String,int,boolean,boolean)
+ String addIntProperty(String,int,int,boolean,boolean)
+ String addFloatProperty(String,float,int,boolean,boolean)
+ String addDoubleProperty(String,double,int,boolean,boolean)
+ String addBooleanProperty(String,boolean,int,boolean,boolean)
+ String beginObjectProperty(String,int)
+ String endObjectProperty(int)
+ String addTabs(int)
+ String addEnding(boolean,boolean)
}
class sk.stuba.fiit.martinszabo.geometrydash.components.Player {
- Sprite layerOne
- Sprite layerTwo
- Sprite layerThree
- Sprite spaceship
- int width
- int height
- boolean onGround
- PlayerState state
+ <<Create>> Player(Sprite,Sprite,Sprite,Color,Color)
+ void draw(Graphics2D)
+ void update(double)
- void addFlyForce()
- void addJumpForce()
+ void die()
+ Component<Player> copy()
+ String serialize(int)
+ Sprite getLayerOne()
+ void setLayerOne(Sprite)
+ Sprite getLayerTwo()
+ void setLayerTwo(Sprite)
+ Sprite getLayerThree()
+ void setLayerThree(Sprite)
+ int getWidth()
+ void setWidth(int)
+ int getHeight()
+ void setHeight(int)
+ boolean isOnGround()
+ void setOnGround(boolean)
+ PlayerState getState()
+ void setState(PlayerState)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.components.MenuButton {
~ ButtonType type
+ <<Create>> MenuButton(ButtonType)
+ void execute()
+ Component<MenuButton> copy()
+ String serialize(int)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.components.Sprite {
- String file
- int width
- int height
- BufferedImage image
- boolean isSubsprite
- int row
- int column
- int index
+ <<Create>> Sprite(String)
+ <<Create>> Sprite(BufferedImage,String)
+ <<Create>> Sprite(BufferedImage,String,int,int,int)
+ void draw(Graphics2D)
+ Component<Sprite> copy()
+ String getFile()
+ void setFile(String)
+ int getWidth()
+ void setWidth(int)
+ int getHeight()
+ void setHeight(int)
+ BufferedImage getImage()
+ void setImage(BufferedImage)
+ boolean isSubsprite()
+ void setSubsprite(boolean)
+ int getRow()
+ void setRow(int)
+ int getColumn()
+ void setColumn(int)
+ int getIndex()
+ void setIndex(int)
+ String serialize(int)
+ {static} Component<Sprite> deserialize()
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.ui.MainContainer {
- Sprite containerBackground
- ArrayList<GameObject> tabs
- HashMap<GameObject,List<GameObject>> tabMaps
- GameObject currentTab
- GameObject currentButton
+ <<Create>> MainContainer()
+ void init()
- void addTabs()
- void addTabObjects()
- void addButtons(Spritesheet,int,int,int,BoundsType)
- void addButtons(Spritesheet,int,int,int,BoundsType,boolean,ArrayList<Component<?>>)
+ void start()
+ void update(double)
+ Component<MainContainer> copy()
+ void draw(Graphics2D)
+ String serialize(int)
+ GameObject getCurrentTab()
+ void setCurrentTab(GameObject)
+ GameObject getCurrentButton()
+ void setCurrentButton(GameObject)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.components.ParallaxBackground {
- int width
- int height
- Sprite sprite
- ArrayList<GameObject> backgrounds
- double speed
- Ground ground
- boolean followGround
- int timeStep
+ <<Create>> ParallaxBackground(String,ArrayList<GameObject>,Ground,boolean,boolean)
+ void update(double)
+ void draw(Graphics2D)
+ Component<ParallaxBackground> copy()
+ String serialize(int)
+ Sprite getSprite()
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene {
- GameObject player
- Grid grid
- CameraControls cameraControls
- GameObject cursor
- MainContainer editingButtons
+ <<Create>> LevelEditorScene(String)
+ void init()
+ void initAssetPool()
+ void update(double)
- boolean isCurrentLevel(String)
# void importLevel(String)
- void exportLevel(String)
+ void draw(Graphics2D)
+ GameObject getPlayer()
+ void setPlayer(GameObject)
+ GameObject getCursor()
+ void setCursor(GameObject)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.engine.Camera {
- Vector2D position
+ <<Create>> Camera(Vector2D)
+ Vector2D getPosition()
+ void setPosition(Vector2D)
+ double getX()
+ double getY()
+ void setX(double)
+ void setY(double)
+ boolean equals(Object)
+ int hashCode()
}
class sk.stuba.fiit.martinszabo.geometrydash.main.Main {
+ {static} void main(String[])
}

'------------------------------------------------
' Implementation
'------------------------------------------------

sk.stuba.fiit.martinszabo.geometrydash.engine.Runnable <|.. sk.stuba.fiit.martinszabo.geometrydash.engine.Window
sk.stuba.fiit.martinszabo.geometrydash.engine.KeyListener <|.. sk.stuba.fiit.martinszabo.geometrydash.engine.KeyListener
sk.stuba.fiit.martinszabo.geometrydash.file.Serialize <|.. sk.stuba.fiit.martinszabo.geometrydash.file.Serialization

'------------------------------------------------
' Association
'------------------------------------------------

sk.stuba.fiit.martinszabo.geometrydash.components.Bounds <-- sk.stuba.fiit.martinszabo.geometrydash.components.BoundsType
sk.stuba.fiit.martinszabo.geometrydash.components.Player <-- sk.stuba.fiit.martinszabo.geometrydash.components.PlayerState

'------------------------------------------------
' Inheritance
'------------------------------------------------

sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.Grid
javax.swing.JFrame <|-- sk.stuba.fiit.martinszabo.geometrydash.engine.Window
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.ui.TabItem
sk.stuba.fiit.martinszabo.geometrydash.components.Bounds <|-- sk.stuba.fiit.martinszabo.geometrydash.components.TriangleBounds
java.awt.event.MouseAdapter <|-- sk.stuba.fiit.martinszabo.geometrydash.engine.MouseListener
sk.stuba.fiit.martinszabo.geometrydash.engine.Scene <|-- sk.stuba.fiit.martinszabo.geometrydash.engine.LevelScene
sk.stuba.fiit.martinszabo.geometrydash.components.Bounds <|-- sk.stuba.fiit.martinszabo.geometrydash.components.BoxBounds
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.ui.MenuItem
sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene <|-- sk.stuba.fiit.martinszabo.geometrydash.engine.MenuScene
sk.stuba.fiit.martinszabo.geometrydash.file.Serialization <|-- sk.stuba.fiit.martinszabo.geometrydash.engine.Component
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.CameraControls
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.LevelEditorControls
sk.stuba.fiit.martinszabo.geometrydash.components.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.Portal
sk.stuba.fiit.martinszabo.geometrydash.file.Serialization <|-- sk.stuba.fiit.martinszabo.geometrydash.util.Transform
sk.stuba.fiit.martinszabo.geometrydash.file.Serialization <|-- sk.stuba.fiit.martinszabo.geometrydash.engine.GameObject
sk.stuba.fiit.martinszabo.geometrydash.file.Serialization <|-- sk.stuba.fiit.martinszabo.geometrydash.util.Vector2D
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.RigidBody
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.Bounds
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.Ground
java.awt.event.KeyAdapter <|-- sk.stuba.fiit.martinszabo.geometrydash.engine.KeyListener
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.Player
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.MenuButton
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.Sprite
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.ui.MainContainer
sk.stuba.fiit.martinszabo.geometrydash.engine.Component <|-- sk.stuba.fiit.martinszabo.geometrydash.components.ParallaxBackground
sk.stuba.fiit.martinszabo.geometrydash.engine.Scene <|-- sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene

'------------------------------------------------
' Agregation
'------------------------------------------------

sk.stuba.fiit.martinszabo.geometrydash.components.Player o-- sk.stuba.fiit.martinszabo.geometrydash.components.Sprite

sk.stuba.fiit.martinszabo.geometrydash.components.Grid o-- sk.stuba.fiit.martinszabo.geometrydash.engine.Camera

sk.stuba.fiit.martinszabo.geometrydash.components.Ground o-- sk.stuba.fiit.martinszabo.geometrydash.engine.LevelScene
sk.stuba.fiit.martinszabo.geometrydash.components.Ground o-- sk.stuba.fiit.martinszabo.geometrydash.engine.GameObject

sk.stuba.fiit.martinszabo.geometrydash.components.RigidBody o-- sk.stuba.fiit.martinszabo.geometrydash.util.Vector2D

sk.stuba.fiit.martinszabo.geometrydash.components.Sprite o-- java.awt.image.BufferedImage

sk.stuba.fiit.martinszabo.geometrydash.components.LevelEditorControls o-- java.util.ArrayList

sk.stuba.fiit.martinszabo.geometrydash.engine.Camera o-- sk.stuba.fiit.martinszabo.geometrydash.util.Vector2D

sk.stuba.fiit.martinszabo.geometrydash.engine.GameObject o-- sk.stuba.fiit.martinszabo.geometrydash.util.Transform

sk.stuba.fiit.martinszabo.geometrydash.ui.MenuItem o-- sk.stuba.fiit.martinszabo.geometrydash.components.Sprite
sk.stuba.fiit.martinszabo.geometrydash.ui.TabItem o-- sk.stuba.fiit.martinszabo.geometrydash.components.Sprite

sk.stuba.fiit.martinszabo.geometrydash.util.Transform o--  sk.stuba.fiit.martinszabo.geometrydash.util.Vector2D
sk.stuba.fiit.martinszabo.geometrydash.components.BoxBounds o--  sk.stuba.fiit.martinszabo.geometrydash.util.Vector2D
sk.stuba.fiit.martinszabo.geometrydash.components.TriangleBounds o--  sk.stuba.fiit.martinszabo.geometrydash.util.Vector2D
sk.stuba.fiit.martinszabo.geometrydash.components.Bounds o--  sk.stuba.fiit.martinszabo.geometrydash.util.Vector2D

'------------------------------------------------
' Composition
'------------------------------------------------

sk.stuba.fiit.martinszabo.geometrydash.components.Grid *-- java.awt.geom.AffineTransform

sk.stuba.fiit.martinszabo.geometrydash.components.Player *-- java.awt.paint.Color
sk.stuba.fiit.martinszabo.geometrydash.components.Player *-- java.awt.geom.AffineTransform

sk.stuba.fiit.martinszabo.geometrydash.components.Spritesheet *-- sk.stuba.fiit.martinszabo.geometrydash.components.Sprite

sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene *-- sk.stuba.fiit.martinszabo.geometrydash.components.Grid
sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene *-- sk.stuba.fiit.martinszabo.geometrydash.components.CameraControls
sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene *-- sk.stuba.fiit.martinszabo.geometrydash.engine.GameObject
sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene *-- sk.stuba.fiit.martinszabo.geometrydash.components.Spritesheet
sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene *-- sk.stuba.fiit.martinszabo.geometrydash.components.Player
sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene *-- sk.stuba.fiit.martinszabo.geometrydash.ui.MainContainer

sk.stuba.fiit.martinszabo.geometrydash.engine.LevelScene *-- sk.stuba.fiit.martinszabo.geometrydash.components.Spritesheet
sk.stuba.fiit.martinszabo.geometrydash.engine.LevelScene *-- sk.stuba.fiit.martinszabo.geometrydash.engine.GameObject
sk.stuba.fiit.martinszabo.geometrydash.engine.LevelScene *-- sk.stuba.fiit.martinszabo.geometrydash.components.Player

sk.stuba.fiit.martinszabo.geometrydash.engine.Scene *-- sk.stuba.fiit.martinszabo.geometrydash.engine.Camera
sk.stuba.fiit.martinszabo.geometrydash.engine.Scene *-- java.util.ArrayList
sk.stuba.fiit.martinszabo.geometrydash.engine.Scene *-- sk.stuba.fiit.martinszabo.geometrydash.engine.Renderer

sk.stuba.fiit.martinszabo.geometrydash.engine.Window *-- sk.stuba.fiit.martinszabo.geometrydash.engine.MouseListener
sk.stuba.fiit.martinszabo.geometrydash.engine.Window *-- sk.stuba.fiit.martinszabo.geometrydash.engine.KeyListener
sk.stuba.fiit.martinszabo.geometrydash.engine.Window *-- sk.stuba.fiit.martinszabo.geometrydash.engine.LevelEditorScene
sk.stuba.fiit.martinszabo.geometrydash.engine.Window *-- sk.stuba.fiit.martinszabo.geometrydash.engine.LevelScene

sk.stuba.fiit.martinszabo.geometrydash.ui.MainContainer *-- java.util.ArrayList
sk.stuba.fiit.martinszabo.geometrydash.ui.MainContainer *-- sk.stuba.fiit.martinszabo.geometrydash.components.Spritesheet
sk.stuba.fiit.martinszabo.geometrydash.ui.MainContainer *-- sk.stuba.fiit.martinszabo.geometrydash.engine.GameObject
sk.stuba.fiit.martinszabo.geometrydash.ui.MainContainer *-- sk.stuba.fiit.martinszabo.geometrydash.ui.MenuItem
sk.stuba.fiit.martinszabo.geometrydash.ui.MainContainer *-- sk.stuba.fiit.martinszabo.geometrydash.ui.TabItem

sk.stuba.fiit.martinszabo.geometrydash.util.AssetPool *-- java.io.File
sk.stuba.fiit.martinszabo.geometrydash.util.AssetPool *-- sk.stuba.fiit.martinszabo.geometrydash.components.Sprite
sk.stuba.fiit.martinszabo.geometrydash.util.AssetPool *-- java.util.HashMap

sk.stuba.fiit.martinszabo.geometrydash.util.Transform *-- sk.stuba.fiit.martinszabo.geometrydash.util.Vector2D

@enduml